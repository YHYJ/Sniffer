# 标注了'FIXME'的是必须赋值的参数
# 标注了'CHANGED'的是可能需要修改的参数
# 标注了'NOTE'的是也许使用默认值即可的参数

[sniffer]
iface = 'lo'                    # CHANGED: 嗅探的网络接口名，留空则嗅探所有接口 -- 注意Linux和Windows接口名风格
ip = ''                         # NOTE: 所嗅探的网络接口的IP，留空则根据'interface.iface'自动获取 -- 正常时自动获取即可，当自动获取出错时尝试手动指定
filte_role = ''                 # CHANGED: snipper.filte组件，指定`interface.iface`扮演的角色 -- 嗅探`interface.iface`发送的数据包则为'src'，嗅探`interface.iface`接收的数据包则为'dst'，为空则无限制
filte_method = ''               # CHANGED: snipper.filte组件，指定抓取的数据包的类型 -- TCP/UDP/ICMP...，为空则无限制
filte_port = 80                 # CHANGED: snipper.filte组件，指定嗅探的端口 -- 为空则无限制
count = 7                       # CHANGED: 计数器，指定每次嗅探的数据包数量 -- 为0则无限制
format = "{IP:%IP.src%:%TCP.sport% -> %IP.dst%:%TCP.dport%}"


[parser]
# 对于'index'的值：
# 如果'interface.sniffer.count'的值为5，则：
#   1. 如果这5个数据包都要解析，则'index'取值和'interface.sniffer.count'一样是5即可
#   2. 如果只解析这5个数据包中特定的几个（例如下标为0、3、4的），则'index'取值为[0, 3, 4]
# 特别要说明的一点，如果'index'的值为int类型，则最大取值为'interface.sniffer.count'的值；如果'index'的值为list类型，则最大取值为'interface.sniffer.count - 1'
index = 7                       # CHANGED: 待解析数据包的下标
byte_order = '!'                # NOTE: 字节顺序，可选值：@, =, <, >, ! -- 默认值!为网络端（等效于大端）
command_length = 4              # CHANGED: Command（如'ABCD'）的长度


[sender]
protocol = 'UDP'                # NOTE: 发送数据使用的协议，'TCP'或'UDP' -- 优先使用'UDP'
ip = '127.0.0.1'                # CHANGED: 数据发送地址 -- 'protocol'为'TCP'代表TCP Server地址（即发送地址），'protocol'为'UDP'代表UDP Client地址（即接收地址）
port = 8848                     # CHANGED: TCP/UDP端口号
backlog = 5                     # CHANGED: 最大待accept连接数
coding = 'UTF-8'                # NOTE: 数据编码格式

[log]
console = true                  # CHANGED: 是否要将log输出到STDOUT，只在调试时有用，正式部署时需要关闭
console_level = 'DEBUG'         # NOTE: 日志等级，可选值为'DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL'
file = true                     # NOTE: 是否要将log输出到文件中
file_level = 'DEBUG'            # NOTE: 日志等级，可选值为'DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL'
log_file = 'logs/log.log'       # NOTE: log文件存储路径
max_size = 10240000             # NOTE: 单个log文件大小，单位KB
backup_count = 5                # NOTE: 最大log文件数
format_string = '(%(asctime)s), %(levelname)s, <%(threadName)s>, %(module)s, %(funcName)s, [%(lineno)d]: %(message)s'
